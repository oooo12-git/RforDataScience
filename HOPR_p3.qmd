---
title: hands on programming with R Part3 Slot machine
date: Sys.Date()
---

```{r}
get_symbols <- function() {
  wheel <- c("DD", "7", "BBB", "BB", "B", "C", "0")
  sample(wheel, size = 3, replace = TRUE, 
    prob = c(0.03, 0.03, 0.06, 0.1, 0.25, 0.01, 0.52))
}
```


```{r}
get_symbols()
```

```{r}
get_symbols()
```
```{r}
get_symbols()
```


```{r}
if(경우 1 : 모두 같은 종류) {
  prize = # 해당 상금을 찾는다.
} else if(경우 2: 모두 바) {
  prize = #5불의 상금 할당
} else {
  #체리의 갯수를 센다.
  prize = # 상금을 계산한다.
}

# 다이아몬드의 갯수를 센다
# 다이아몬드의 갯수만큼 상금을 두배로 한다.
```

```{r}
symbols = c("7","7","7")
same = symbols[1] == symbols[2] && symbols[2] == symbols[3]
```

```{r}
if(same) {
  prize = # 해당 상금을 찾는다.
} else if(경우 2: 모두 바) {
  prize = #5불의 상금 할당
} else {
  #체리의 갯수를 센다.
  prize = # 상금을 계산한다.
}

# 다이아몬드의 갯수를 센다
# 다이아몬드의 갯수만큼 상금을 두배로 한다.
```

```{r}
symbols = c("B","BB","BBB")

all(symbols %in% c("B","BB","BBB"))
```
```{r}
bars = symbols %in% c("B","BB","BBB")
```

```{r}
if(same) {
  prize = # 해당 상금을 찾는다.
} else if(all(bars)) {
  prize = #5불의 상금 할당
} else {
  #체리의 갯수를 센다.
  prize = # 상금을 계산한다.
}

# 다이아몬드의 갯수를 센다
# 다이아몬드의 갯수만큼 상금을 두배로 한다.
```

```{r}
if(same) {
  payouts = c("DD" = 100,"7" = 80, "BBB" = 40, "BB" = 25, "B" = 10,
              "C" = 10, "0" = 0)
  prize = payouts[symbols[1]]
} else if(all(bars)) {
  prize = 5
} else {
  #체리의 갯수를 센다.
  prize = # 상금을 계산한다.
}

# 다이아몬드의 갯수를 센다
# 다이아몬드의 갯수만큼 상금을 두배로 한다.
```

```{r}
symbols = c("C","DD","C")
```

```{r}
symbols == "C"
```

```{r}
sum(symbols == "C")
```

```{r}
sum(symbols == "DD")
```

```{r}
same = symbols[1] == symbols[2] && symbols[2] == symbols[3]
bars = symbols %in% c("B","BB","BBB")

if(same) {
  payouts = c("DD" = 100,"7" = 80, "BBB" = 40, "BB" = 25, "B" = 10,
              "C" = 10, "0" = 0)
  prize = payouts[symbols[1]]
} else if(all(bars)) {
  prize = 5
} else {
  cherries = sum(symbols == "C")
  prize = c(0,2,5)[cherries +1]
}

diamonds = sum(symbols == "DD")
# 다이아몬드의 갯수만큼 상금을 두배로 한다.
```

```{r}
cherries = 2
c(0,2,5)[cherries +1]
```

```{r}
prize * 2 ^ diamonds
```

```{r}
# 어떤 경우에 해당하는지 조건 확인
same = symbols[1] == symbols[2] && symbols[2] == symbols[3]
bars = symbols %in% c("B","BB","BBB")

# 상금 계산
if(same) {
  payouts = c("DD" = 100,"7" = 80, "BBB" = 40, "BB" = 25, "B" = 10,
              "C" = 10, "0" = 0)
  prize = payouts[symbols[1]]
} else if(all(bars)) {
  prize = 5
} else {
  cherries = sum(symbols == "C")
  prize = c(0,2,5)[cherries +1]
}

# 다이아몬드일 때 상금 조정
diamonds = sum(symbols == "DD")
prize * 2 ^ diamonds
```


```{r}
one_play = play()
one_play
```
```{r}
attributes(one_play)
```

```{r}
attr(one_play,"symbols") = c("B","0","B")
attributes(one_play)
```

```{r}
attr(one_play,"symbols")
```

```{r}
play = function(){
  symbols = get_symbols()
  prize = score(symbols)
  attr(prize,"symbols") = symbols
  prize
}
```

```{r}
two_play = play()
two_play
```

```{r}
play = function(){
  symbols = get_symbols()
  structure(score(symbols),symbols = symbols)
}
```

```{r}
three_play = play()
three_play
```

```{r}
slot_display <- function(prize){

  # extract symbols
  symbols <- attr(prize, "symbols")

  # collapse symbols into single string
  symbols <- paste(symbols, collapse = " ")

  # combine symbol with prize as a character string
  # \n is special escape sequence for a new line (i.e. return or enter)
  string <- paste(symbols, prize, sep = "\n$")

  # display character string in console without quotes
  cat(string)
}

slot_display(one_play)
## B 0 B
## $0
```

```{r}
slot_display(play())
```

```{r}
print
```

```{r}
print.POSIXct
```

```{r}
head(methods(print))
```

```{r}
class(one_play) = "slots"
```

```{r}
args(print)
```

```{r}
print.slots = function(x, ...){
  cat("print.slots 메서드를 사용하고 있습니다.")
}
```

```{r}
print(one_play)
```

```{r}
one_play
```

```{r}
rm(print.slots)
```

```{r}
now = Sys.time()
attributes(now)
```

```{r}
print.slots = function(x,...){
  slot_display(x)
}
```

```{r}
one_play
```


```{r}
play = function(){
  symbols = get_symbols()
  structure(score(symbols),symbols = symbols, class = "slots")
}
```

```{r}
class(play())
```


```{r}
play()
```

